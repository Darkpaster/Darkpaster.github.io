---
import BaseLayout from '@/layouts/BaseLayout.astro';
import TopicCard from '@/components/TopicCard.astro';
import { getCollection } from 'astro:content';

// Get all topics
const allTopics: any[] = await getCollection('topics', ({ data }) => {
	return !data.draft;
});

// Sort topics by level and then by title
const sortedTopics = allTopics.sort((a, b) => {
	if (a.data.level !== b.data.level) {
		return a.data.level - b.data.level;
	}
	return a.data.title.localeCompare(b.data.title, 'ru');
});

// Group topics by category for featured sections
const topicsByCategory = allTopics.reduce((acc, topic) => {
	const category = topic.data.category || 'other';
	if (!acc[category]) {
		acc[category] = [];
	}
	acc[category].push(topic);
	return acc;
}, {} as Record<string, typeof allTopics>);

// Get featured topics (level 1-2 topics from each category)
const featuredTopics = Object.values(topicsByCategory)
	.flat()
	.filter(topic => topic.data.level <= 2)
	.slice(0, 6);

const stats = {
	totalTopics: allTopics.length,
	categories: Object.keys(topicsByCategory).length,
	avgLevel: Math.round(allTopics.reduce((sum, topic) => sum + topic.data.level, 0) / allTopics.length * 10) / 10
};
---

<BaseLayout
	title="HumanityOS - –ì–ª–∞–≤–Ω–∞—è"
	description="–°–∏—Å—Ç–µ–º–∞ –∑–Ω–∞–Ω–∏–π –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–∏—Ä–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –µ–≥–æ —É–ª—É—á—à–µ–Ω–∏—é"
>
	<!-- Hero Section -->
	<section class="hero min-h-[60vh] bg-gradient-to-br from-primary/10 via-secondary/5 to-accent/10 rounded-2xl mb-12">
		<div class="hero-content text-center">
			<div class="max-w-4xl">
				<h1 class="text-5xl lg:text-6xl font-bold mb-6 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
					üå≥ HumanityOS
				</h1>
				<p class="text-xl lg:text-2xl mb-8 text-base-content/80 leading-relaxed">
					–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–Ω–∞–Ω–∏–π –æ –º–∏—Ä–µ: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏
					–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —É–ª—É—á—à–µ–Ω–∏—é –∫–ª—é—á–µ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
				</p>
				<div class="flex flex-wrap justify-center gap-4">
					<a href="#featured" class="btn btn-primary btn-lg">
						–ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ
					</a>
					<a href="/about" class="btn btn-outline btn-lg">
						–û –ø—Ä–æ–µ–∫—Ç–µ
					</a>
					<a href="/graph" class="btn btn-secondary btn-lg">
						–ì—Ä–∞—Ñ –∑–Ω–∞–Ω–∏–π
					</a>
				</div>
			</div>
		</div>
	</section>

	<!-- Stats -->
	<section class="mb-12">
		<div class="stats stats-vertical lg:stats-horizontal shadow w-full">
			<div class="stat">
				<div class="stat-figure text-primary">
					<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
						<path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
					</svg>
				</div>
				<div class="stat-title">–í—Å–µ–≥–æ —Ç–µ–º</div>
				<div class="stat-value text-primary">{stats.totalTopics}</div>
				<div class="stat-desc">–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑</div>
			</div>

			<div class="stat">
				<div class="stat-figure text-secondary">
					<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
						<path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
					</svg>
				</div>
				<div class="stat-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
				<div class="stat-value text-secondary">{stats.categories}</div>
				<div class="stat-desc">–°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏—è</div>
			</div>

			<div class="stat">
				<div class="stat-figure text-accent">
					<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="stat-title">–°—Ä. —Å–ª–æ–∂–Ω–æ—Å—Ç—å</div>
				<div class="stat-value text-accent">{stats.avgLevel}</div>
				<div class="stat-desc">–ò–∑ 5 —É—Ä–æ–≤–Ω–µ–π</div>
			</div>
		</div>
	</section>

	<!-- Featured Topics -->
	<section id="featured" class="mb-12">
		<div class="flex items-center justify-between mb-8">
			<h2 class="text-3xl font-bold">üåü –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–ª—è –Ω–∞—á–∞–ª–∞</h2>
			<a href="#all-topics" class="btn btn-ghost">
				–í—Å–µ —Ç–µ–º—ã ‚Üí
			</a>
		</div>

		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			{featuredTopics.map(topic => (
				<TopicCard
					title={topic.data.title}
					description={topic.data.description}
					slug={`/topics/${topic.slug}`}
					tags={topic.data.tags}
					level={topic.data.level}
					meme={topic.data.meme}
					category={topic.data.category}
					difficulty={topic.data.difficulty}
				/>
			))}
		</div>
	</section>

	<!-- Categories Overview -->
	<section class="mb-12">
		<h2 class="text-3xl font-bold mb-8">üìö –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–Ω–∞–Ω–∏–π</h2>

		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			{Object.entries(topicsByCategory).map(([category, topics]) => {
				const categoryInfo = {
					cognition: { icon: 'üß†', name: '–ü–æ–∑–Ω–∞–Ω–∏–µ', desc: '–ú—ã—à–ª–µ–Ω–∏–µ, –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —è–∑—ã–∫' },
					society: { icon: 'üèõÔ∏è', name: '–û–±—â–µ—Å—Ç–≤–æ', desc: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã' },
					technology: { icon: '‚öôÔ∏è', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', desc: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ' },
					philosophy: { icon: 'üí≠', name: '–§–∏–ª–æ—Å–æ—Ñ–∏—è', desc: '–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã' },
					meta: { icon: 'üìã', name: 'META', desc: '–û –ø—Ä–æ–µ–∫—Ç–µ –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏' }
				}[category] || { icon: 'üìÅ', name: category, desc: '–†–∞–∑–Ω–æ–µ' };

				return (
					<div class="card bg-base-100 shadow-lg border border-base-300 hover:border-primary/50 transition-colors">
						<div class="card-body">
							<h3 class="card-title">
								<span class="text-2xl">{categoryInfo.icon}</span>
								{categoryInfo.name}
							</h3>
							<p class="text-base-content/70">{categoryInfo.desc}</p>
							<div class="card-actions justify-between items-center mt-4">
								<span class="badge badge-outline">{topics.length} —Ç–µ–º</span>
								<button class="btn btn-primary btn-sm" onclick={`toggleCategory('${category}')`}>
									–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å
								</button>
							</div>

							<!-- Hidden topics list -->
							<div id={`category-${category}`} class="hidden mt-4 space-y-2">
								{topics.slice(0, 5).map(topic => (
									<a
										href={`/topics/${topic.slug}`}
										class="flex items-center gap-2 p-2 rounded hover:bg-base-200 transition-colors text-sm"
									>
										<span class="badge badge-xs badge-primary">{topic.data.level}</span>
										<span class="flex-1">{topic.data.title}</span>
									</a>
								))}
								{topics.length > 5 && (
									<div class="text-center text-sm text-base-content/60">
										–ò –µ—â–µ {topics.length - 5} —Ç–µ–º...
									</div>
								)}
							</div>
						</div>
					</div>
				);
			})}
		</div>
	</section>

	<!-- All Topics -->
	<section id="all-topics">
		<h2 class="text-3xl font-bold mb-8">üìñ –í—Å–µ —Ç–µ–º—ã</h2>

		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			{sortedTopics.map(topic => (
				<TopicCard
					title={topic.data.title}
					description={topic.data.description}
					slug={`/topics/${topic.slug}`}
					tags={topic.data.tags}
					level={topic.data.level}
					meme={topic.data.meme}
					category={topic.data.category}
					difficulty={topic.data.difficulty}
				/>
			))}
		</div>
	</section>
</BaseLayout>

<script>
	function toggleCategory(category: string) {
		const element = document.getElementById(`category-${category}`);
		const button = event?.target as HTMLButtonElement;

		if (element && button) {
			const isHidden = element.classList.contains('hidden');

			if (isHidden) {
				element.classList.remove('hidden');
				button.textContent = '–°–≤–µ—Ä–Ω—É—Ç—å';
			} else {
				element.classList.add('hidden');
				button.textContent = '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å';
			}
		}
	}

	// Make function global
	(window as any).toggleCategory = toggleCategory;
</script>