<!-- memeEmbed.astro -->
---
export interface Props {
    src: string;
    alt: string;
    caption?: string;
    width?: number;
    height?: number;
    lazy?: boolean;
}

const {
    src,
    alt,
    caption,
    width,
    height,
    lazy = true
} = Astro.props;
---

<style>
    /* CSS Variables */
    :root {
        --color-base-200: #f3f4f6;
        --color-base-content: #374151;
        --color-base-content-50: rgba(55, 65, 81, 0.5);
        --color-base-content-70: rgba(55, 65, 81, 0.7);
        --border-radius: 0.5rem;
    }

    .meme-figure {
        margin: 2rem auto;
        max-width: 100%;
    }

    .image-container {
        position: relative;
        overflow: hidden;
        border-radius: var(--border-radius);
        background: var(--color-base-200);
    }

    .meme-image {
        width: 100%;
        height: auto;
        transition: transform 0.3s ease;
    }

    .meme-image:hover {
        transform: scale(1.05);
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.2), transparent);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .image-container:hover .image-overlay {
        opacity: 1;
    }

    .error-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 12rem;
        color: var(--color-base-content-50);
        font-size: 1.125rem;
    }

    .caption {
        margin-top: 0.75rem;
        text-align: center;
        font-size: 0.875rem;
        color: var(--color-base-content-70);
        font-style: italic;
    }

    /* Mobile responsive */
    @media (max-width: 640px) {
        .meme-figure {
            margin: 2rem -1rem;
        }

        .image-container {
            border-radius: 0;
        }
    }
</style>

<figure class="meme-figure">
    <div class="image-container">
        <img
                src={src}
                alt={alt}
                width={width}
                height={height}
                loading={lazy ? "lazy" : "eager"}
                class="meme-image"
                onError="this.parentElement.innerHTML='<div class=\'error-placeholder\'>üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>'"
        />

        <div class="image-overlay"></div>
    </div>

    {caption && (
            <figcaption class="caption">
                {caption}
            </figcaption>
    )}
</figure>