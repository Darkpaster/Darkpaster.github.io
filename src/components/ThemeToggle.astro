
<button
    id="theme-toggle"
    class="theme-toggle-btn"
    title="Переключить тему"
    aria-label="Переключить тему"
>
  <svg id="sun-icon" class="theme-icon" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
  </svg>
  <svg id="moon-icon" class="theme-icon" fill="currentColor" viewBox="0 0 20 20">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
  </svg>
</button>

<style>
  /* Theme Toggle Button */
  .theme-toggle-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    padding: 0;
    background-color: transparent;
    color: hsl(var(--bc));
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.2s ease, color 0.2s ease;
  }

  .theme-toggle-btn:hover {
    background-color: hsl(var(--b2));
  }

  .theme-toggle-btn:focus {
    outline: 2px solid hsl(var(--p));
    outline-offset: 2px;
  }

  .theme-toggle-btn:active {
    transform: scale(0.95);
  }

  /* Theme Icons */
  .theme-icon {
    width: 1.25rem;
    height: 1.25rem;
    transition: opacity 0.2s ease;
  }

  .theme-icon.hidden {
    display: none;
  }

  /* CSS Variables for theme support */
  :root {
    --bc: 215 28% 17%;
    --b2: 0 0% 95%;
    --p: 262 80% 50%;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --bc: 215 28% 88%;
      --b2: 222 84% 8%;
      --p: 262 80% 50%;
    }
  }
</style>

<script>
  function initTheme() {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    const html = document.documentElement;

    html.setAttribute('data-theme', savedTheme);

    updateIcons(savedTheme);
  }

  function updateIcons(theme) {
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');

    if (theme === 'dark') {
      sunIcon?.classList.remove('hidden');
      moonIcon?.classList.add('hidden');
    } else {
      sunIcon?.classList.add('hidden');
      moonIcon?.classList.remove('hidden');
    }
  }

  function toggleTheme() {
    const html = document.documentElement;
    const currentTheme = html.getAttribute('data-theme') || 'dark';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

    html.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);

    updateIcons(newTheme);

    window.dispatchEvent(new CustomEvent('theme-changed', { detail: newTheme }));
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTheme);
  } else {
    initTheme();
  }

  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.getElementById('theme-toggle');
    themeToggle?.addEventListener('click', toggleTheme);
  });
</script>