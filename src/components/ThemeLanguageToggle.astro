<div style="display: flex; gap: 0.5rem;">
    <button
            id="theme-toggle"
            class="toggle-btn"
            title="Переключить тему"
            aria-label="Переключить тему"
    >
        <svg id="sun-icon" class="toggle-icon" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd"
                  d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                  clip-rule="evenodd"/>
        </svg>
        <svg id="moon-icon" class="toggle-icon" fill="currentColor" viewBox="0 0 20 20">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/>
        </svg>
    </button>

    <button
            id="lang-toggle"
            class="toggle-btn"
            title="Switch language"
            aria-label="Switch language"
    >
    <span id="lang-current" class="toggle-icon" style="font-weight: bold; font-size: 0.9rem;">
      EN
    </span>
    </button>
</div>

<style>

    .toggle-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 3rem;
        height: 3rem;
        padding: 0;
        background-color: transparent;
        color: hsl(var(--bc));
        border: none;
        border-radius: 0.5rem;
        cursor: pointer;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

    .toggle-btn:hover {
        background-color: hsl(var(--b2));
    }

    .toggle-btn:focus {
        outline: 2px solid hsl(var(--p));
        outline-offset: 2px;
    }

    .toggle-btn:active {
        transform: scale(0.95);
    }

    .toggle-icon {
        width: 1.25rem;
        height: 1.25rem;
        transition: opacity 0.2s ease;
    }

    .hidden {
        display: none;
    }

    :root {
        --bc: 215 28% 17%;
        --b2: 0 0% 95%;
        --p: 262 80% 50%;
    }

    @media (prefers-color-scheme: dark) {
        :root {
            --bc: 215 28% 88%;
            --b2: 222 84% 8%;
            --p: 262 80% 50%;
        }
    }

</style>

<script>
    (function(){
        const availableLocales = ['en', 'ru'];
        const defaultLocale = 'en';

        function initTheme() {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            document.documentElement.setAttribute('data-theme', savedTheme);
            updateThemeIcons(savedTheme);
            }
        function updateThemeIcons(theme) {
            document.getElementById('sun-icon').classList.toggle('hidden', theme !== 'dark');
            document.getElementById('moon-icon').classList.toggle('hidden', theme === 'dark');
            }
        function toggleTheme() {
            const html = document.documentElement;
            const currentTheme = html.getAttribute('data-theme') || 'dark';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateThemeIcons(newTheme);
            window.dispatchEvent(new CustomEvent('theme-changed', { detail: newTheme }));
            }

        function initLanguage() {
            const savedLocale = localStorage.getItem('locale') || defaultLocale;
            setLocale(savedLocale, false);
            }
        function setLocale(locale, reload = true) {
            localStorage.setItem('locale', locale);
            document.getElementById('lang-current').textContent = locale.toUpperCase();
            if (reload) {
                const currentUrl = new URL(window.location.href);
                let pathParts = currentUrl.pathname.split('/').filter(Boolean);

                if (availableLocales.includes(pathParts[0])) {
                    pathParts[0] = locale;
                    } else {
                    pathParts.unshift(locale);
                    }

                currentUrl.pathname = '/' + pathParts.join('/');

                window.location.href = currentUrl.toString();
                }
            }
        function toggleLanguage() {
            const currentLocale = localStorage.getItem('locale') || defaultLocale;
            const nextIndex = (availableLocales.indexOf(currentLocale) + 1) % availableLocales.length;
            const currentUrl = new URL(window.location.href).toString();
            if (currentUrl.includes('topics')) {
                const isEn = currentUrl.includes('/en/');
                window.location.href = currentUrl.replace(isEn ? '/en/' : '/ru/', isEn ? '/ru/' : '/en/');
                const locale = isEn ? 'ru' : 'en';
                localStorage.setItem('locale', locale);
                document.getElementById('lang-current').textContent = locale.toUpperCase();
                return;
                }
            setLocale(availableLocales[nextIndex]);
            }

        document.addEventListener('DOMContentLoaded', () => {
            initTheme();
            initLanguage();
            document.getElementById('theme-toggle')?.addEventListener('click', toggleTheme);
            document.getElementById('lang-toggle')?.addEventListener('click', toggleLanguage);
            });
        })();
</script>
