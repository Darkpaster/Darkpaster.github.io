<!--baseLayout.astro-->
---
// import Navigation from '@/components/Navigation.astro';
import SearchBox from '@/components/SearchBox.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';
import RandomQuote from '@/components/RandomQuote.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = "Система знаний и размышлений", image } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="description" content={description} />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
  <meta name="generator" content={Astro.generator} />

  <!-- Обязательно импортируем глобальные стили -->
  <link rel="stylesheet" href="/styles/global.css">

  <!-- SEO Meta Tags -->
  <title>{title}</title>
  <link rel="canonical" href={canonicalURL} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  {image && <meta property="og:image" content={new URL(image, Astro.url)} />}

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  {image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}

  <!-- KaTeX CSS for math rendering -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css"
        integrity="sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblOHI/4vqZlHHK4R" crossorigin="anonymous">

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
</head>
<body class="body-layout">
<div class="drawer-container">
  <input id="drawer-toggle" type="checkbox" class="drawer-toggle" />

  <!-- Page content -->
  <div class="drawer-content">
    <!-- Header -->
    <header class="header">
      <div class="header-start">
        <label for="drawer-toggle" class="drawer-btn">
          <svg class="drawer-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </label>
        <a href="/" class="logo-link">
          HumanityOS
        </a>
        <RandomQuote />
      </div>

      <div class="header-end">
        <ThemeToggle />
      </div>
    </header>

    <!-- Main content -->
    <main class="main-content">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="footer">
      <div>
        <p class="footer-text">
          © 2025 HumanityOS. Все материалы доступны свободно при указании источника.
        </p>
      </div>
    </footer>
  </div>

  <!-- Sidebar -->
  <div class="drawer-side">
    <label for="drawer-toggle" class="drawer-overlay"></label>
    <aside class="sidebar">
      <SearchBox />
    </aside>
  </div>
</div>

<!-- Инициализация темы -->
<!--<script>-->
<!--  // Инициализируем тему до загрузки DOM, чтобы избежать мигания-->
<!--  (function() {-->
<!--    const savedTheme = localStorage.getItem('theme') || 'dark';-->
<!--    document.documentElement.setAttribute('data-theme', savedTheme);-->
<!--  })();-->
<!--</script>-->
</body>
</html>

<style>
  .body-layout {
    min-height: 100vh;
    background-color: var(--base-100);
    color: var(--base-content);
  }

  .drawer-container {
    position: relative;
    display: grid;
    grid-auto-columns: max-content auto;
    width: 100%;
  }

  .drawer-content {
    display: flex;
    flex-direction: column;
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: 0;
    flex: 1;
  }

  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0 1rem;
    min-height: 4rem;
    background-color: rgba(var(--base-200), 0.5);
    backdrop-filter: blur(2px);
    border-bottom: 1px solid var(--base-300);
  }

  .header-start {
    display: flex;
    align-items: center;
    width: 50%;
    justify-content: flex-start;
  }

  .header-end {
    display: flex;
    align-items: center;
    width: 50%;
    justify-content: flex-end;
  }

  .drawer-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    padding: 0;
    cursor: pointer;
    border: none;
    background: transparent;
    border-radius: var(--rounded-btn);
    color: var(--base-content);
    transition: background-color 0.2s ease;
  }

  .drawer-btn:hover {
    background-color: var(--base-200);
  }

  .drawer-icon {
    width: 1.5rem;
    height: 1.5rem;
  }

  .logo-link {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    font-size: 1.25rem;
    font-weight: 700;
    text-decoration: none;
    color: var(--base-content);
    border-radius: var(--rounded-btn);
    transition: background-color 0.2s ease;
  }

  .logo-link:hover {
    background-color: var(--base-200);
  }

  .main-content {
    flex: 1;
    padding: 1rem;
  }

  .footer {
    display: grid;
    place-items: center;
    padding: 1.5rem;
    background-color: var(--base-200);
    color: var(--base-content);
  }

  .footer-text {
    font-size: 0.875rem;
    opacity: 0.7;
    margin: 0;
  }

  .sidebar {
    width: 20rem;
    min-height: 100%;
    background-color: var(--base-200);
  }

  /* Адаптивные стили */
  //@media (min-width: 1024px) {
  //  .drawer-btn {
  //    display: none;
  //  }
  //
  //  .drawer-container {
  //    grid-template-columns: auto 1fr;
  //  }
  //
  //  .drawer-side {
  //    pointer-events: auto;
  //    position: static;
  //    transform: translateX(0);
  //    grid-column-start: 1;
  //    grid-row-start: 1;
  //  }
  //
  //  .drawer-content {
  //    grid-column-start: 2;
  //    grid-row-start: 1;
  //  }
  //
  //  .drawer-overlay {
  //    display: none;
  //  }
  //
  //  .main-content {
  //    padding: 2rem;
  //  }
  //}

  //@media (max-width: 1023px) {
  //  .drawer-side {
  //    pointer-events: none;
  //    position: fixed;
  //    top: 0;
  //    left: 0;
  //    width: 100%;
  //    height: 100vh;
  //    z-index: 10;
  //  }
  //
  //  .drawer-side > * {
  //    grid-column-start: 1;
  //    grid-row-start: 1;
  //  }
  //
  //  .drawer-side > *:not(.drawer-overlay) {
  //    transform: translateX(-100%);
  //    transition: transform 0.3s ease;
  //  }
  //
  //  .drawer-toggle:checked ~ .drawer-side {
  //    pointer-events: auto;
  //    visibility: visible;
  //  }
  //
  //  .drawer-toggle:checked ~ .drawer-side .drawer-overlay {
  //    background-color: rgba(0, 0, 0, 0.6);
  //  }
  //
  //  .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  //    transform: translateX(0);
  //  }
  //}
</style>